<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="compile" name="silk">

	<property environment="env" />
	<property name="target" value="1.6" />
	<property name="source" value="1.6" />

	<property name="app.name" value="Silk DI" />
	<property name="app.version" value="0.1" />
	<property name="snapshot.version" value="${app.version}.2" />
	<property name="release.version" value="${app.version}.3" />

	<property name="target.dir" value="target" />
	<property name="src.dir" value="src" />
	
	<property name="core.src.dir" value="${src.dir}/core" />
	<property name="test.src.dir" value="${src.dir}/test" />
	<property name="draft.src.dir" value="${src.dir}/draft" />
	
	<property name="core.target.dir" value="${target.dir}/core" />
	<property name="draft.target.dir" value="${target.dir}/draft" />
	<property name="test.target.dir" value="${target.dir}/test" />
	<property name="javadoc.target.dir" value="${target.dir}/javadoc" />

	<property name="dist.dir" value="dist" />

	<path id="silk.classpath">
		<pathelement location="${core.target.dir}" />
	</path>

	<target name="init">
		<mkdir dir="${target.dir}" />
		<mkdir dir="${core.target.dir}" />
		<mkdir dir="${test.target.dir}" />
		<mkdir dir="${draft.target.dir}" />
		<copy includeemptydirs="false" todir="${core.target.dir}">
			<fileset dir="${core.src.dir}">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="${test.target.dir}">
			<fileset dir="${test.src.dir}">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy includeemptydirs="false" todir="${draft.target.dir}">
			<fileset dir="${draft.src.dir}">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>		
	</target>

	<target name="clean">
		<delete dir="${target.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="compile" depends="init">
		<javac debug="true" debuglevel="${debuglevel}" destdir="${core.target.dir}" source="${source}" target="${target}" includeantruntime="false">
			<src path="${core.src.dir}" />
			<classpath refid="silk.classpath" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
		<javac debug="true" debuglevel="${debuglevel}" destdir="${draft.target.dir}" source="${source}" target="${target}" includeantruntime="false">
			<src path="${draft.src.dir}" />
			<classpath refid="silk.classpath" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<target name="jar">
		<tstamp>
			<format property="current.time" pattern="yyMMddHHmmss" />
		</tstamp>
		<antcall target="-jar">
			<param name="archive-version" value="${snapshot.version}.${current.time}" />
		</antcall>
	</target>

	<target name="dist">
		<antcall target="-jar">
			<param name="archive-version" value="${release.version}" />
		</antcall>
	</target>

	<target name="-jar" depends="compile, javadoc, license">
		<jar destfile="${dist.dir}/silk-${archive-version}.jar"  >
			<fileset dir="." file="LICENSE" />
			<fileset dir="${core.target.dir}" includes="**/*.class" />
			<manifest>
				<attribute name='Specification-Version' value='${app.version}'/> 
				<attribute name='Specification-Title' value='${app.name}' />
				<attribute name='Implementation-Version' value='${app.version}'/> 
				<attribute name='Implementation-Title' value='${app.name}' />
				<attribute name='Bundle-License' value='Apache 2.0' />
				<attribute name='Package' value='se.jbee.inject' />
			</manifest>
		</jar>
		<jar destfile="${dist.dir}/silk-${archive-version}-sources.jar">
			<fileset dir="." file="LICENSE" />
			<fileset dir="${core.src.dir}" includes="**/*.java" />
			<manifest>
				<attribute name='Specification-Version' value='${app.version}'/> 
				<attribute name='Specification-Title' value='${app.name}' />
				<attribute name='Implementation-Version' value='${app.version}'/> 
				<attribute name='Implementation-Title' value='${app.name}' />
				<attribute name='Bundle-License' value='Apache 2.0' />
				<attribute name='Package' value='se.jbee.inject' />
			</manifest>
		</jar>
		<jar destfile="${dist.dir}/silk-${archive-version}-javadoc.jar">
			<fileset dir="." file="LICENSE" />
			<fileset dir="${javadoc.target.dir}" includes="**/*" />
			<manifest>
				<attribute name='Specification-Version' value='${app.version}'/> 
				<attribute name='Specification-Title' value='${app.name}' />
				<attribute name='Implementation-Version' value='${app.version}'/> 
				<attribute name='Implementation-Title' value='${app.name}' />
				<attribute name='Bundle-License' value='Apache 2.0' />
				<attribute name='Package' value='se.jbee.inject' />
			</manifest>
		</jar>
		<zip destfile="${dist.dir}/silk-${archive-version}.zip">
			<fileset dir="." file="LICENSE" />
			<fileset dir="${dist.dir}" includes="silk-${archive-version}*.jar" />
		</zip>
	</target>

	<target name='javadoc' depends="compile" description='Generate javadoc.'>
		<delete dir="${javadoc.target.dir}" quiet="true" />
		<javadoc use='true' author='true' version='true' 
			access='package' destdir='${javadoc.target.dir}' 
			windowtitle='${app.name} ${app.version}' 
			noqualifier='java.*:javax.*:com.sun.*' linksource='false'>
			
			<packageset dir="${core.src.dir}" defaultexcludes="yes">
				<exclude name="org/junit/**" />
			</packageset>

			<classpath refid='silk.classpath' />
			<link href='http://jbee.github.com/silk/assets/javadoc/' />
			<header><![CDATA[<h1><em>${app.name} ${app.version}</em></h1>]]></header>
		</javadoc>
	</target>

	<target name="test-compile" depends="compile">
		<javac debug="true" debuglevel="${debuglevel}" destdir="${target.dir}" source="${source}" target="${target}">
			<src path="${test.src.dir}" />
			<src path="${draft.src.dir}" />
			<classpath refid="silk.classpath" />
		</javac>
	</target>

	<target name="test" depends="test-compile">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<test name="se.jbee.inject.SuiteSilk" todir="${junit.output.dir}" />
			<classpath refid="silk.classpath" />
		</junit>
	</target>
	
	<target name="junitreport">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>
	
	<target name="license" depends="javadoc" description="Write the license headers">
		<echo file="${dist.dir}/javaheader.txt">/*
 *  Copyright (c) 2012, Jan Bernitt 
 *			
 *  Licensed under the Apache License, Version 2.0, http://www.apache.org/licenses/LICENSE-2.0
 */</echo>

		<loadfile property="javaheader" srcFile="${dist.dir}/javaheader.txt" />
		<replaceregexp match="\A(/\*.*?\*/.*?)??^package " flags="sm" replace="${javaheader}${line.separator}package ">
			<fileset dir="${core.src.dir}">
				<include name="**/*.java" />
			</fileset>
		</replaceregexp>

		<echo file="${dist.dir}/htmlheader.txt">&lt;!-- 
  Copyright (c) 2012, Jan Bernitt
  
  Licensed under the Apache License, Version 2.0, http://www.apache.org/licenses/LICENSE-2.0
--&gt;</echo>
		<loadfile property="htmlheader" srcFile="${dist.dir}/htmlheader.txt" />
		<replaceregexp match="^.!--NewPage--." flags="sm" replace="&lt;!--NewPage--&gt;${line.separator}${htmlheader}">
			<fileset dir="${javadoc.target.dir}">
				<include name="**/*.html" />
			</fileset>
		</replaceregexp>
	</target>
	
</project>
